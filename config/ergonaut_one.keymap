#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/pointing.h>

#define LR_MAIN_EN  0
#define LR_MAIN_RU  1
#define LR_WILDS    2
#define LR_NUMS     3
#define LR_FN       4
#define LR_NAV      5
#define LR_MEDIA    6
#define LR_SERV     7

&lt { quick_tap_ms = <100>; };
&mt { quick-tap-ms = <400>; };
&sl { release-after-ms = <1000>; };

/ {
  // tap mods
  behaviors {
      // // NOTE: example, "LR_WILDS_WITH 0 TAB". 0 is dummy argument: https://zmk.dev/docs/behaviors/hold-tap#using-different-behavior-types-with-hold-taps
      // LR_WILDS_WITH: LR_WILDS_WITH {
      //     compatible = "zmk,behavior-hold-tap";
      //     label = "LR_WILDS_WITH";
      //     #binding-cells = <2>;
      //     flavor = "hold-preferred";
      //     tapping-term-ms = <150>;
      //     // bindings = <hold>, <tap>;
      //     bindings = <&WILDS_RU>, <&kp>;
      // };

    // cmt: custom mod-tap
    cmt: cmt {
      compatible = "zmk,behavior-hold-tap";
      #binding-cells = <2>;
      flavor = "tap-preferred";
      tapping-term-ms = <200>;
      quick-tap-ms = <200>;
      bindings = <&kp>, <&kp>; // <hold fn>, <tap fn>;
    };

    B_SERV: B_SERV {
      compatible = "zmk,behavior-tap-dance";
      #binding-cells = <0>;
      tapping-term-ms = <200>;
      bindings = <&kp B>, <&kp B>, <&kp B>, <&kp B>, <&kp B>, <&kp B>, <&kp B>, <&kp B>, <&kp B>, <&to LR_SERV>;
    };

    N_SERV: N_SERV {
      compatible = "zmk,behavior-tap-dance";
      #binding-cells = <0>;
      tapping-term-ms = <200>;
      bindings = <&kp N>, <&kp N>, <&kp N>, <&kp N>, <&kp N>, <&kp N>, <&kp N>, <&kp N>, <&kp N>, <&to LR_SERV>;
    };
  };
};

/ {
  keymap {
    compatible = "zmk,keymap";

    LR_MAIN_EN {
      bindings = <
        // row 1
        &kp ESC        &kp Q   &kp W   &kp E         &kp R   &kp T                &kp Y     &kp U   &kp I   &kp O   &kp P       &none
        // row 2
        &mt LWIN TAB   &kp A   &kp S   &kp D         &kp F   &kp G                &kp H     &kp J   &kp K   &kp L   &none       &kp BSPC
        // row 3
        &kp LCTRL      &kp Z   &kp X   &lt LR_FN C   &kp V   &B_SERV              &N_SERV   &kp M   &none   &none   &kp COMMA   &kp DOT
        // thumb row
        &mt LALT ENTER   &kp LSHFT   &lt LR_NUMS SPACE                            &lt LR_NAV SPACE   &mo LR_WILDS   &lt LR_MEDIA ENTER
      >;
    };
    
    LR_MAIN_RU {
      bindings = <
        // row 1
        &trans   &kp Q   &kp W   &kp E         &kp R   &cmt GRAVE T            &kp Y   &kp U          &kp I       &kp O     &kp P       &kp LBKT
        // row 2
        &trans   &kp A   &kp S   &kp D         &kp F   &kp G                   &kp H   &cmt SQT J     &kp K       &kp L     &kp SEMI    &trans
        // row 3
        &trans   &kp Z   &kp X   &lt LR_FN C   &kp V   &B_SERV                 &N_SERV   &cmt RBKT M    &kp COMMA   &kp DOT   &trans   &trans
        // &trans   &kp Z   &kp X   &lt LR_FN C   &kp V   &B_SERV                 &N_SERV   &cmt RBKT M    &kp COMMA   &kp DOT   &COMMA_RU   &DOT_RU
        // thumb row
        &trans   &trans   &trans                                               &trans   &trans   &trans
        // &trans   &trans   &trans                                               &trans   &WILDS_RU   &trans
      >;
    };
  };
};